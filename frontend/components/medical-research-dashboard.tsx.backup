"use client"

import React, { useState, useEffect } from "react"
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card"
import { Badge } from "@/components/ui/badge"
import { Progress } from "@/components/ui/progress"
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs"
import { Button } from "@/components/ui/button"
import { 
  DropdownMenu,
  DropdownMenuContent,
  DropdownMenuItem,
  DropdownMenuSeparator,
  DropdownMenuTrigger,
} from "@/components/ui/dropdown-menu"
import { Dialog, DialogContent, DialogHeader, DialogTitle } from "@/components/ui/dialog"
import { 
  Users, 
  FileText, 
  TrendingUp, 
  TrendingDown, 
  Clock, 
  CheckCircle, 
  AlertTriangle,
  Award,
  BarChart3,
  PieChart,
  Activity,
  Stethoscope,
  FlaskConical,
  Microscope,
  Heart,
  Brain,
  Eye,
  FolderOpen,
  DollarSign,
  Trophy,
  ArrowUpRight,
  Banknote,
  MoreVertical,
  Expand,
  Download,
  ArrowRight
} from "lucide-react"
import { cn } from "@/lib/utils"
import dynamic from "next/dynamic"

// 动态导入数据看板专用图表组件
const DynamicProjectStatusChart = dynamic(() => import("@/components/data-dashboard-charts/dashboard-project-status-chart"), { ssr: false })
const DynamicProjectApplicationChart = dynamic(() => import("@/components/data-dashboard-charts/dashboard-teacher-publication-chart"), { ssr: false })
const DynamicProjectFundingChart = dynamic(() => import("@/components/data-dashboard-charts/dashboard-project-funding-chart"), { ssr: false })
const DynamicProjectHealthChart = dynamic(() => import("@/components/data-dashboard-charts/dashboard-project-health-chart"), { ssr: false })
const DynamicTeamDistributionChart = dynamic(() => import("@/components/data-dashboard-charts/dashboard-team-distribution-chart"), { ssr: false })
const DynamicResourceUtilizationChart = dynamic(() => import("@/components/data-dashboard-charts/dashboard-resource-utilization-chart"), { ssr: false })
const DynamicSingleBarChart = dynamic(() => import("@/components/data-dashboard-charts/dashboard-single-bar-chart"), { ssr: false })
const DynamicResearchInstituteTargetChart = dynamic(() => import("@/components/data-dashboard-charts/dashboard-research-institute-target-chart"), { ssr: false })
const DynamicMultiDimensionalAnalysisChart = dynamic(() => import("@/components/data-dashboard-charts/dashboard-multi-dimensional-analysis-chart"), { ssr: false })
const DynamicTargetCompletionStatusChart = dynamic(() => import("@/components/data-dashboard-charts/dashboard-target-completion-status-chart"), { ssr: false })
const DynamicIPTransformationEfficiencyChart = dynamic(() => import("@/components/data-dashboard-charts/dashboard-ip-transformation-efficiency-chart"), { ssr: false })
const DynamicRevenueDistributionChart = dynamic(() => import("@/components/data-dashboard-charts/dashboard-revenue-distribution-chart"), { ssr: false })
const DynamicHorizontalResearchProjectsChart = dynamic(() => import("@/components/data-dashboard-charts/dashboard-horizontal-research-projects-chart"), { ssr: false })
const DynamicTestRadarChart = dynamic(() => import("@/components/data-dashboard-charts/dashboard-test-radar-chart"), { ssr: false })
const DynamicIPTransformationRingChart = dynamic(
  () => import("@/components/data-dashboard-charts/dashboard-ip-transformation-ring-chart"), 
  { 
    ssr: false,
    loading: () => <div className="flex items-center justify-center h-full text-gray-500">Loading...</div>
  }
)

// 动态导入数据看板专用图表组件
const DynamicProjectProgressPanoramaChart = dynamic(() => import("@/components/data-dashboard-charts/dashboard-project-progress-panorama-chart"), { ssr: false })
const DynamicProjectTypeDistributionChart = dynamic(() => import("@/components/data-dashboard-charts/dashboard-project-type-distribution-chart"), { ssr: false })
const DynamicProjectLevelStatisticsChart = dynamic(() => import("@/components/data-dashboard-charts/dashboard-project-level-statistics-chart"), { ssr: false })

// 统计卡片组件
interface StatCardProps {
  title: string
  value: string
  unit: string
  monthOnMonth: { value: string; isUp: boolean }
  monthRingRatio: { value: string; isUp: boolean }
  valueColor: string
  icon?: React.ReactNode
}

function StatCard({ title, value, unit, monthOnMonth, monthRingRatio, valueColor, icon }: StatCardProps) {
  // 上升三角形图标组件
  const UpTriangleIcon = () => (
    <svg width="12" height="12" viewBox="0 0 1024 1024" className="inline-block">
      <path d="M534.65 393.4a31.991 31.991 0 0 0-45.3 0L297.4 585.355A31.994 31.994 0 0 0 320.05 640h383.9a31.992 31.992 0 0 0 22.65-54.644L534.65 393.4z" fill="#EF3939" />
    </svg>
  )

  // 下降三角形图标组件
  const DownTriangleIcon = () => (
    <svg width="12" height="12" viewBox="0 0 1024 1024" className="inline-block">
      <path d="M483.474286 695.734857l-216.502857-270.628571A36.571429 36.571429 0 0 1 295.497143 365.714286h433.005714a36.571429 36.571429 0 0 1 28.525714 59.465143L540.525714 695.734857a36.571429 36.571429 0 0 1-57.051428 0z" fill="#4DCFA0" />
    </svg>
  )

  // 根据数字颜色生成对应的渐变背景和阴影
  const getGradientClasses = (color: string) => {
    switch (color) {
      case 'text-blue-600':
        return 'hover:bg-gradient-to-br hover:from-slate-50 hover:via-blue-50/50 hover:to-blue-100/30 hover:border-blue-200/60 hover:shadow-[0_12px_24px_-8px_rgba(59,130,246,0.15),0_20px_40px_-12px_rgba(147,197,253,0.2)]'
      case 'text-red-500':
        return 'hover:bg-gradient-to-br hover:from-slate-50 hover:via-red-50/50 hover:to-red-100/30 hover:border-red-200/60 hover:shadow-[0_12px_24px_-8px_rgba(239,68,68,0.15),0_20px_40px_-12px_rgba(252,165,165,0.2)]'
      case 'text-orange-500':
        return 'hover:bg-gradient-to-br hover:from-slate-50 hover:via-orange-50/50 hover:to-orange-100/30 hover:border-orange-200/60 hover:shadow-[0_12px_24px_-8px_rgba(249,115,22,0.15),0_20px_40px_-12px_rgba(254,215,170,0.2)]'
      case 'text-green-600':
        return 'hover:bg-gradient-to-br hover:from-slate-50 hover:via-green-50/50 hover:to-green-100/30 hover:border-green-200/60 hover:shadow-[0_12px_24px_-8px_rgba(34,197,94,0.15),0_20px_40px_-12px_rgba(187,247,208,0.2)]'
      case 'text-purple-600':
        return 'hover:bg-gradient-to-br hover:from-slate-50 hover:via-purple-50/50 hover:to-purple-100/30 hover:border-purple-200/60 hover:shadow-[0_12px_24px_-8px_rgba(147,51,234,0.15),0_20px_40px_-12px_rgba(221,214,254,0.2)]'
      default:
        return 'hover:bg-gradient-to-br hover:from-slate-50 hover:via-blue-50/50 hover:to-blue-100/30 hover:border-blue-200/60 hover:shadow-[0_12px_24px_-8px_rgba(59,130,246,0.15),0_20px_40px_-12px_rgba(147,197,253,0.2)]'
    }
  }

  // 根据数字颜色生成对应的图标颜色
  const getIconColor = (color: string) => {
    switch (color) {
      case 'text-blue-600':
        return 'text-blue-400/70 group-hover:text-blue-500/80'
      case 'text-red-500':
        return 'text-red-300/70 group-hover:text-red-400/80'
      case 'text-orange-500':
        return 'text-orange-300/70 group-hover:text-orange-400/80'
      case 'text-green-600':
        return 'text-green-400/70 group-hover:text-green-500/80'
      case 'text-purple-600':
        return 'text-purple-400/70 group-hover:text-purple-500/80'
      default:
        return 'text-blue-400/70 group-hover:text-blue-500/80'
    }
  }

  return (
    <Card className={`group cursor-pointer transform transition-all duration-700 ease-in-out hover:-translate-y-1 ${getGradientClasses(valueColor)} relative overflow-hidden bg-white/75 backdrop-blur-lg border border-white/40`}>
      {/* 右上角图标 - 纯图标版本 */}
      {icon && (
        <div className={`absolute top-3 right-3 transition-all duration-500 ease-in-out z-10 opacity-0 group-hover:opacity-100 transform scale-75 group-hover:scale-100 rotate-12 group-hover:rotate-6 drop-shadow-sm ${getIconColor(valueColor)}`}>
          {icon}
        </div>
      )}
      
      <CardContent className="p-6">
        <div className="space-y-3">
          {/* 卡片名称 */}
          <h3 className="text-sm font-medium text-gray-600">{title}</h3>
          
          {/* 数量 */}
          <div className={`text-2xl font-bold ${valueColor}`}>
            {value} <span className="text-sm font-normal text-gray-500">{unit}</span>
          </div>
          
          {/* 月同比和月环比 */}
          <div className="flex items-center gap-6 text-xs">
            <div className="flex items-center gap-1">
              <span className="text-gray-500">月同比</span>
              <span className={`${monthOnMonth.isUp ? "text-red-500" : "text-green-500"}`}>
                {monthOnMonth.value}
              </span>
              {monthOnMonth.isUp ? <UpTriangleIcon /> : <DownTriangleIcon />}
            </div>
            
            <div className="flex items-center gap-1">
              <span className="text-gray-500">月环比</span>
              <span className={`${monthRingRatio.isUp ? "text-red-500" : "text-green-500"}`}>
                {monthRingRatio.value}
              </span>
              {monthRingRatio.isUp ? <UpTriangleIcon /> : <DownTriangleIcon />}
            </div>
          </div>
        </div>
      </CardContent>
    </Card>
  )
}



export default function MedicalResearchDashboard({ activeModule = "overview" }: { activeModule?: string }) {
  const [isLoading, setIsLoading] = useState(true)
  const [expandedChart, setExpandedChart] = useState<string | null>(null)
  const [multiDimensionMode, setMultiDimensionMode] = useState<'institute' | 'contract'>('institute')
  const [revenueYear, setRevenueYear] = useState<string>('2024')
  const [selectedCategory, setSelectedCategory] = useState<string | null>(null);
  const [selectedInstitutes, setSelectedInstitutes] = useState<string[]>([]);
  
  // 详细数据列表的筛选和排序状态
  const [sortField, setSortField] = useState<'name' | 'target' | 'actual' | 'completion' | null>(null);
  const [sortDirection, setSortDirection] = useState<'asc' | 'desc'>('asc');
  const [filterStatus, setFilterStatus] = useState<'all' | 'completed' | 'uncompleted'>('all');
  const [searchTerm, setSearchTerm] = useState('');

  // 处理排序
  const handleSort = (field: 'name' | 'target' | 'actual' | 'completion') => {
    if (sortField === field) {
      setSortDirection(sortDirection === 'asc' ? 'desc' : 'asc');
    } else {
      setSortField(field);
      setSortDirection('asc');
    }
  };

  // 研究所数据
  const instituteRawData = [
    { 
      name: "心血管研究所", 
      target: 2500, 
      actual: 2800, 
      completion: 112.0,
      transform: 1800,
      horizontal: 1000
    },
    { 
      name: "神经医学研究所", 
      target: 2200, 
      actual: 1950, 
      completion: 88.6,
      transform: 1200,
      horizontal: 750
    },
    { 
      name: "肿瘤研究所", 
      target: 3000, 
      actual: 3200, 
      completion: 106.7,
      transform: 2000,
      horizontal: 1200
    },
    { 
      name: "呼吸疾病研究所", 
      target: 1800, 
      actual: 1650, 
      completion: 91.7,
      transform: 900,
      horizontal: 750
    },
    { 
      name: "消化系统研究所", 
      target: 2100, 
      actual: 2350, 
      completion: 111.9,
      transform: 1500,
      horizontal: 850
    },
    { 
      name: "内分泌研究所", 
      target: 1600, 
      actual: 1450, 
      completion: 90.6,
      transform: 800,
      horizontal: 650
    },
    { 
      name: "骨科研究所", 
      target: 1900, 
      actual: 2100, 
      completion: 110.5,
      transform: 1300,
      horizontal: 800
    },
    { 
      name: "眼科研究所", 
      target: 1400, 
      actual: 1250, 
      completion: 89.3,
      transform: 700,
      horizontal: 550
    },
    { 
      name: "皮肤病研究所", 
      target: 1300, 
      actual: 1450, 
      completion: 111.5,
      transform: 900,
      horizontal: 550
    },
    { 
      name: "精神卫生研究所", 
      target: 1200, 
      actual: 1150, 
      completion: 95.8,
      transform: 650,
      horizontal: 500
    }
  ];

  // 筛选和排序数据
  const getFilteredAndSortedData = () => {
    let filteredData = instituteRawData;

    // 搜索筛选
    if (searchTerm) {
      filteredData = filteredData.filter(item => 
        item.name.toLowerCase().includes(searchTerm.toLowerCase())
      );
    }

    // 状态筛选
    if (filterStatus !== 'all') {
      filteredData = filteredData.filter(item => 
        filterStatus === 'completed' ? item.completion >= 100 : item.completion < 100
      );
    }

    // 排序
    if (sortField) {
      filteredData = [...filteredData].sort((a, b) => {
        let aValue = a[sortField];
        let bValue = b[sortField];
        
        if (sortField === 'name') {
          aValue = aValue as string;
          bValue = bValue as string;
          return sortDirection === 'asc' 
            ? aValue.localeCompare(bValue) 
            : bValue.localeCompare(aValue);
        } else {
          aValue = aValue as number;
          bValue = bValue as number;
          return sortDirection === 'asc' ? aValue - bValue : bValue - aValue;
        }
      });
    }

    return filteredData;
  };

  useEffect(() => {
    // 模拟数据加载
    const timer = setTimeout(() => {
      setIsLoading(false)
    }, 500)
    
    return () => clearTimeout(timer)
  }, [])

  // 图表操作函数
  const handleExpandChart = (chartId: string) => {
    setExpandedChart(chartId)
  }

  const handleCloseExpanded = () => {
    setExpandedChart(null)
  }

  const handleDownloadChart = (chartId: string, chartTitle: string) => {
    // 这里可以实现图表下载功能
    console.log(`下载图表: ${chartTitle}`)
    // 可以使用 html2canvas 或其他库来实现图表截图下载
  }

  // 模拟数据
  const overviewData = {
    totalProjects: 248,
    ethicProjects: 89,
    ongoingProjects: 156,
    completedProjects: 92,
    totalFunding: "2,845万元",
    usedFunding: "1,687万元",
    ethicReviews: 234,
    pendingReviews: 45,
    approvedReviews: 189,
    researchers: 312,
    publications: 127,
    patents: 23
  }

  if (isLoading) {
    return (
      <div className="flex items-center justify-center h-64">
        <div className="animate-spin w-8 h-8 border-4 border-blue-500 border-t-transparent rounded-full"></div>
      </div>
    )
  }

  // 根据activeModule渲染不同内容
  const renderContent = () => {
    switch (activeModule) {
      case "overview":
        return renderOverviewContent()
      case "ethics":
        return renderEthicsContent()
      case "projects":
        return renderProjectsContent()
      case "funding":
        return renderFundingContent()
      default:
        return renderOverviewContent()
    }
  }

  // 综合概览内容
  const renderOverviewContent = () => (
    <div className="space-y-4">
      {/* 顶部统计卡片 */}
      <div className="grid gap-4 grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-5">
        <StatCard
          title="科研项目"
          value="2,334"
          unit="项"
          valueColor="text-blue-600"
          monthOnMonth={{ value: "+2.5%", isUp: true }}
          monthRingRatio={{ value: "-1.2%", isUp: false }}
          icon={<FolderOpen className="h-8 w-8" />}
        />
        <StatCard
          title="科研经费"
          value="15,678"
          unit="万元"
          valueColor="text-red-500"
          monthOnMonth={{ value: "-3.1%", isUp: false }}
          monthRingRatio={{ value: "+3.7%", isUp: true }}
          icon={<DollarSign className="h-8 w-8" />}
        />
        <StatCard
          title="科研成果"
          value="1,245"
          unit="项"
          valueColor="text-orange-500"
          monthOnMonth={{ value: "+5.1%", isUp: true }}
          monthRingRatio={{ value: "+2.8%", isUp: true }}
          icon={<Trophy className="h-8 w-8" />}
        />
        <StatCard
          title="转化项目"
          value="156"
          unit="项"
          valueColor="text-green-600"
          monthOnMonth={{ value: "-2.3%", isUp: false }}
          monthRingRatio={{ value: "+6.2%", isUp: true }}
          icon={<ArrowUpRight className="h-8 w-8" />}
        />
        <StatCard
          title="转化经费"
          value="3,456"
          unit="万元"
          valueColor="text-purple-600"
          monthOnMonth={{ value: "+15.8%", isUp: true }}
          monthRingRatio={{ value: "-4.1%", isUp: false }}
          icon={<Banknote className="h-8 w-8" />}
        />
      </div>

      {/* 图表部分 */}
      <div className="space-y-4">
        {isLoading ? (
          // 加载状态
          <div className="space-y-4">
            {/* 第一行：两个图表各占一半 */}
            <div className="grid grid-cols-1 lg:grid-cols-2 gap-4">
              {Array.from({ length: 2 }).map((_, index) => (
                <Card key={`row1-${index}`} className="border border-[#E9ECF2] h-[350px] shadow-none">
                  <CardHeader>
                    <div className="animate-pulse h-4 w-24 bg-gray-200 rounded"></div>
                  </CardHeader>
                  <CardContent className="flex items-center justify-center h-[320px]">
                    <div className="animate-pulse h-40 w-40 bg-gray-200 rounded-full"></div>
                  </CardContent>
                </Card>
              ))}
            </div>
            
            {/* 第二行：左侧一个图表 + 右侧两个图表 */}
            <div className="grid grid-cols-1 lg:grid-cols-2 gap-4">
              {/* 左侧：一个图表 */}
              <Card className="border border-[#E9ECF2] h-[350px] shadow-none">
                <CardHeader>
                  <div className="animate-pulse h-4 w-24 bg-gray-200 rounded"></div>
                </CardHeader>
                <CardContent className="flex items-center justify-center h-[320px]">
                  <div className="animate-pulse h-40 w-40 bg-gray-200 rounded-full"></div>
                </CardContent>
              </Card>
              
              {/* 右侧：两个图表 */}
              <div className="grid grid-cols-1 sm:grid-cols-2 gap-4">
                {Array.from({ length: 2 }).map((_, index) => (
                  <Card key={`row2-right-${index}`} className="border border-[#E9ECF2] h-[350px] shadow-none">
                    <CardHeader>
                      <div className="animate-pulse h-4 w-24 bg-gray-200 rounded"></div>
                    </CardHeader>
                    <CardContent className="flex items-center justify-center h-[320px]">
                      <div className="animate-pulse h-32 w-32 bg-gray-200 rounded-full"></div>
                    </CardContent>
                  </Card>
                ))}
              </div>
            </div>
          </div>
        ) : (
          // 实际图表
          <div className="space-y-4">
            {/* 第一行：科研成果产出统计 + 科研项目申报与立项情况 */}
            <div className="grid grid-cols-1 lg:grid-cols-2 gap-4">
              <Card className="bg-white/80 backdrop-blur-lg border border-white/50 group">
                <CardHeader className="flex flex-row items-center justify-between pb-3">
                  <div className="flex items-center gap-3">
                    <div className="w-1.5 h-6 bg-gradient-to-b from-blue-600 to-cyan-400 rounded-full"></div>
                    <CardTitle className="text-[18px] font-normal">科研成果产出统计</CardTitle>
                  </div>
                  <DropdownMenu>
                    <DropdownMenuTrigger asChild>
                      <Button 
                        variant="ghost" 
                        size="sm" 
                        className="h-8 w-8 p-0 hover:bg-gray-100 opacity-0 group-hover:opacity-100 transition-opacity duration-200"
                      >
                        <MoreVertical className="h-4 w-4 text-gray-500" />
                      </Button>
                    </DropdownMenuTrigger>
                    <DropdownMenuContent align="end" className="w-40">
                      <DropdownMenuItem 
                        onClick={() => handleExpandChart('research-output')}
                        className="cursor-pointer"
                      >
                        <Expand className="mr-2 h-4 w-4" />
                        放大查看
                      </DropdownMenuItem>
                      <DropdownMenuSeparator />
                      <DropdownMenuItem 
                        onClick={() => handleDownloadChart('research-output', '科研成果产出统计')}
                        className="cursor-pointer"
                      >
                        <Download className="mr-2 h-4 w-4" />
                        下载图表
                      </DropdownMenuItem>
                    </DropdownMenuContent>
                  </DropdownMenu>
                </CardHeader>
                <CardContent className="h-[350px]">
                  <DynamicSingleBarChart />
                </CardContent>
              </Card>

              <Card className="bg-white/80 backdrop-blur-lg border border-white/50 group">
                <CardHeader className="flex flex-row items-center justify-between pb-3">
                  <div className="flex items-center gap-3">
                    <div className="w-1.5 h-6 bg-gradient-to-b from-blue-600 to-cyan-400 rounded-full"></div>
                    <CardTitle className="text-[18px] font-normal">科研项目申报与立项情况</CardTitle>
                  </div>
                  <DropdownMenu>
                    <DropdownMenuTrigger asChild>
                      <Button 
                        variant="ghost" 
                        size="sm" 
                        className="h-8 w-8 p-0 hover:bg-gray-100 opacity-0 group-hover:opacity-100 transition-opacity duration-200"
                      >
                        <MoreVertical className="h-4 w-4 text-gray-500" />
                      </Button>
                    </DropdownMenuTrigger>
                    <DropdownMenuContent align="end" className="w-40">
                      <DropdownMenuItem 
                        onClick={() => handleExpandChart('project-application')}
                        className="cursor-pointer"
                      >
                        <Expand className="mr-2 h-4 w-4" />
                        放大查看
                      </DropdownMenuItem>
                      <DropdownMenuSeparator />
                      <DropdownMenuItem 
                        onClick={() => handleDownloadChart('project-application', '科研项目申报与立项情况')}
                        className="cursor-pointer"
                      >
                        <Download className="mr-2 h-4 w-4" />
                        下载图表
                      </DropdownMenuItem>
                    </DropdownMenuContent>
                  </DropdownMenu>
                </CardHeader>
                <CardContent className="h-[350px]">
                  <DynamicProjectApplicationChart />
                </CardContent>
              </Card>
            </div>

            {/* 第二行：科研经费分配情况（左半部分）+ 科研项目状态分布和任务完成情况（右半部分） */}
            <div className="grid grid-cols-1 lg:grid-cols-2 gap-4">
              {/* 左侧：科研经费分配情况，占据一半位置 */}
              <Card className="bg-white/80 backdrop-blur-lg border border-white/50 group">
                <CardHeader className="flex flex-row items-center justify-between pb-3">
                  <div className="flex items-center gap-3">
                    <div className="w-1.5 h-6 bg-gradient-to-b from-blue-600 to-cyan-400 rounded-full"></div>
                    <CardTitle className="text-[18px] font-normal">科研经费分配情况</CardTitle>
                  </div>
                  <DropdownMenu>
                    <DropdownMenuTrigger asChild>
                      <Button 
                        variant="ghost" 
                        size="sm" 
                        className="h-8 w-8 p-0 hover:bg-gray-100 opacity-0 group-hover:opacity-100 transition-opacity duration-200"
                      >
                        <MoreVertical className="h-4 w-4 text-gray-500" />
                      </Button>
                    </DropdownMenuTrigger>
                    <DropdownMenuContent align="end" className="w-40">
                      <DropdownMenuItem 
                        onClick={() => handleExpandChart('funding-distribution')}
                        className="cursor-pointer"
                      >
                        <Expand className="mr-2 h-4 w-4" />
                        放大查看
                      </DropdownMenuItem>
                      <DropdownMenuSeparator />
                      <DropdownMenuItem 
                        onClick={() => handleDownloadChart('funding-distribution', '科研经费分配情况')}
                        className="cursor-pointer"
                      >
                        <Download className="mr-2 h-4 w-4" />
                        下载图表
                      </DropdownMenuItem>
                    </DropdownMenuContent>
                  </DropdownMenu>
                </CardHeader>
                <CardContent className="h-[350px]">
                  <DynamicProjectFundingChart />
                </CardContent>
              </Card>

              {/* 右侧：科研项目状态分布和任务完成情况，共占一半位置 */}
              <div className="grid grid-cols-1 sm:grid-cols-2 gap-4">
                <Card className="bg-white/80 backdrop-blur-lg border border-white/50 group">
                  <CardHeader className="flex flex-row items-center justify-between pb-3">
                                          <div className="flex items-center gap-3">
                        <div className="w-1.5 h-6 bg-gradient-to-b from-blue-600 to-cyan-400 rounded-full"></div>
                        <CardTitle className="text-[18px] font-normal">成果转化目标总完成统计</CardTitle>
                      </div>
                    <DropdownMenu>
                      <DropdownMenuTrigger asChild>
                        <Button 
                          variant="ghost" 
                          size="sm" 
                          className="h-8 w-8 p-0 hover:bg-gray-100 opacity-0 group-hover:opacity-100 transition-opacity duration-200"
                        >
                          <MoreVertical className="h-4 w-4" />
                        </Button>
                      </DropdownMenuTrigger>
                      <DropdownMenuContent align="end" className="w-40">
                        <DropdownMenuItem 
                          onClick={() => handleExpandChart('project-status')}
                          className="cursor-pointer"
                        >
                          <Expand className="mr-2 h-4 w-4" />
                          放大查看
                        </DropdownMenuItem>
                        <DropdownMenuSeparator />
                        <DropdownMenuItem 
                          onClick={() => handleDownloadChart('project-status', '科研项目状态分布')}
                          className="cursor-pointer"
                        >
                          <Download className="mr-2 h-4 w-4" />
                          下载图表
                        </DropdownMenuItem>
                      </DropdownMenuContent>
                    </DropdownMenu>
                  </CardHeader>
                  <CardContent className="h-[320px]">
                    <DynamicProjectStatusChart />
                  </CardContent>
                </Card>

                <Card className="bg-white/80 backdrop-blur-lg border border-white/50 group">
                  <CardHeader className="flex flex-row items-center justify-between pb-3">
                                          <div className="flex items-center gap-3">
                        <div className="w-1.5 h-6 bg-gradient-to-b from-blue-600 to-cyan-400 rounded-full"></div>
                        <CardTitle className="text-[18px] font-normal">成果转化经费统计</CardTitle>
                      </div>
                    <DropdownMenu>
                      <DropdownMenuTrigger asChild>
                        <Button 
                          variant="ghost" 
                          size="sm" 
                          className="h-8 w-8 p-0 hover:bg-gray-100 opacity-0 group-hover:opacity-100 transition-opacity duration-200"
                        >
                          <MoreVertical className="h-4 w-4" />
                        </Button>
                      </DropdownMenuTrigger>
                      <DropdownMenuContent align="end" className="w-40">
                        <DropdownMenuItem 
                          onClick={() => handleExpandChart('task-completion')}
                          className="cursor-pointer"
                        >
                          <Expand className="mr-2 h-4 w-4" />
                          放大查看
                        </DropdownMenuItem>
                        <DropdownMenuSeparator />
                        <DropdownMenuItem 
                          onClick={() => handleDownloadChart('task-completion', '任务完成情况')}
                          className="cursor-pointer"
                        >
                          <Download className="mr-2 h-4 w-4" />
                          下载图表
                        </DropdownMenuItem>
                      </DropdownMenuContent>
                    </DropdownMenu>
                  </CardHeader>
                  <CardContent className="h-[320px]">
                    <DynamicTeamDistributionChart />
                  </CardContent>
                </Card>
              </div>
            </div>
          </div>
        )}
      </div>
    </div>
  )

  // 伦理管理内容
  const renderEthicsContent = () => (
    <div className="h-[calc(100vh-160px)] flex flex-col gap-4">
      {/* 伦理审查特色布局：三列式不对称布局 */}
      
      {/* 第一行：三列布局 - 左侧2/5 + 中间2/5 + 右侧1/5 */}
      <div className="flex gap-4 flex-[3]">
        {/* 左侧大卡片 - 占2/5宽度 */}
        <Card className="bg-white/80 backdrop-blur-lg border border-white/50 group flex-[2]">
          <CardHeader className="flex flex-row items-center justify-between pb-3">
            <div className="flex items-center gap-3">
              <div className="w-2 h-6 bg-gradient-to-b from-blue-600 to-cyan-400 rounded-full"></div>
              <CardTitle className="text-[18px] font-normal">伦理审查统计</CardTitle>
            </div>
            <DropdownMenu>
              <DropdownMenuTrigger asChild>
                <Button 
                  variant="ghost" 
                  size="sm" 
                  className="h-8 w-8 p-0 hover:bg-gray-100 opacity-0 group-hover:opacity-100 transition-opacity duration-200"
                >
                  <MoreVertical className="h-4 w-4" />
                </Button>
              </DropdownMenuTrigger>
              <DropdownMenuContent align="end">
                <DropdownMenuItem onClick={() => handleExpandChart('ethics-overview')}>
                  <Expand className="mr-2 h-4 w-4" />
                  放大查看
                </DropdownMenuItem>
                <DropdownMenuSeparator />
                <DropdownMenuItem>
                  <Download className="mr-2 h-4 w-4" />
                  下载图表
                </DropdownMenuItem>
              </DropdownMenuContent>
            </DropdownMenu>
          </CardHeader>
          <CardContent className="flex items-center justify-center flex-1">
            <div className="text-center text-gray-500">
              <p>图表占位符</p>
              <p className="text-sm mt-2">伦理审查统计</p>
            </div>
          </CardContent>
        </Card>

        {/* 中间大卡片 - 占2/5宽度 */}
        <Card className="bg-white/80 backdrop-blur-lg border border-white/50 group flex-[2]">
          <CardHeader className="flex flex-row items-center justify-between pb-3">
            <div className="flex items-center gap-3">
              <div className="w-1.5 h-6 bg-gradient-to-b from-blue-600 to-cyan-400 rounded-full"></div>
              <CardTitle className="text-[18px] font-normal">审查类型分布</CardTitle>
            </div>
            <DropdownMenu>
              <DropdownMenuTrigger asChild>
                <Button 
                  variant="ghost" 
                  size="sm" 
                  className="h-8 w-8 p-0 hover:bg-gray-100 opacity-0 group-hover:opacity-100 transition-opacity duration-200"
                >
                  <MoreVertical className="h-4 w-4" />
                </Button>
              </DropdownMenuTrigger>
              <DropdownMenuContent align="end">
                <DropdownMenuItem onClick={() => handleExpandChart('review-type')}>
                  <Expand className="mr-2 h-4 w-4" />
                  放大查看
                </DropdownMenuItem>
                <DropdownMenuSeparator />
                <DropdownMenuItem>
                  <Download className="mr-2 h-4 w-4" />
                  下载图表
                </DropdownMenuItem>
              </DropdownMenuContent>
            </DropdownMenu>
          </CardHeader>
          <CardContent className="flex items-center justify-center flex-1">
            <div className="text-center text-gray-500">
              <p>图表占位符</p>
              <p className="text-sm mt-2">审查类型分布</p>
            </div>
          </CardContent>
        </Card>

        {/* 右侧两个小卡片 - 占1/5宽度 */}
        <div className="flex flex-col gap-4 flex-1">
          <Card className="bg-white/80 backdrop-blur-lg border border-white/50 group flex-1">
            <CardHeader className="flex flex-row items-center justify-between pb-3">
              <div className="flex items-center gap-3">
                <div className="w-1.5 h-6 bg-gradient-to-b from-blue-600 to-cyan-400 rounded-full"></div>
                <CardTitle className="text-[16px] font-normal">审查状态</CardTitle>
              </div>
              <DropdownMenu>
                <DropdownMenuTrigger asChild>
                  <Button 
                    variant="ghost" 
                    size="sm" 
                    className="h-8 w-8 p-0 hover:bg-gray-100 opacity-0 group-hover:opacity-100 transition-opacity duration-200"
                  >
                    <MoreVertical className="h-4 w-4" />
                  </Button>
                </DropdownMenuTrigger>
                <DropdownMenuContent align="end">
                  <DropdownMenuItem onClick={() => handleExpandChart('review-status')}>
                    <Expand className="mr-2 h-4 w-4" />
                    放大查看
                  </DropdownMenuItem>
                  <DropdownMenuSeparator />
                  <DropdownMenuItem>
                    <Download className="mr-2 h-4 w-4" />
                    下载图表
                  </DropdownMenuItem>
                </DropdownMenuContent>
              </DropdownMenu>
            </CardHeader>
            <CardContent className="flex items-center justify-center flex-1">
              <div className="text-center text-gray-500">
                <p>图表占位符</p>
                <p className="text-xs mt-1">审查状态</p>
              </div>
            </CardContent>
          </Card>

          <Card className="bg-white/80 backdrop-blur-lg border border-white/50 group flex-1">
            <CardHeader className="flex flex-row items-center justify-between pb-3">
              <div className="flex items-center gap-3">
                <div className="w-1.5 h-6 bg-gradient-to-b from-blue-600 to-cyan-400 rounded-full"></div>
                <CardTitle className="text-[16px] font-normal">审查效率</CardTitle>
              </div>
              <DropdownMenu>
                <DropdownMenuTrigger asChild>
                  <Button 
                    variant="ghost" 
                    size="sm" 
                    className="h-8 w-8 p-0 hover:bg-gray-100 opacity-0 group-hover:opacity-100 transition-opacity duration-200"
                  >
                    <MoreVertical className="h-4 w-4" />
                  </Button>
                </DropdownMenuTrigger>
                <DropdownMenuContent align="end">
                  <DropdownMenuItem onClick={() => handleExpandChart('review-efficiency')}>
                    <Expand className="mr-2 h-4 w-4" />
                    放大查看
                  </DropdownMenuItem>
                  <DropdownMenuSeparator />
                  <DropdownMenuItem>
                    <Download className="mr-2 h-4 w-4" />
                    下载图表
                  </DropdownMenuItem>
                </DropdownMenuContent>
              </DropdownMenu>
            </CardHeader>
            <CardContent className="flex items-center justify-center flex-1">
              <div className="text-center text-gray-500">
                <p>图表占位符</p>
                <p className="text-xs mt-1">审查效率</p>
              </div>
            </CardContent>
          </Card>
        </div>
      </div>

      {/* 第二行：四等分布局 */}
      <div className="flex gap-4 flex-[2]">
        <Card className="bg-white/80 backdrop-blur-lg border border-white/50 group flex-1">
          <CardHeader className="flex flex-row items-center justify-between pb-3">
            <div className="flex items-center gap-3">
              <div className="w-1.5 h-6 bg-gradient-to-b from-blue-600 to-cyan-400 rounded-full"></div>
              <CardTitle className="text-[18px] font-normal">审查周期</CardTitle>
            </div>
            <DropdownMenu>
              <DropdownMenuTrigger asChild>
                <Button 
                  variant="ghost" 
                  size="sm" 
                  className="h-8 w-8 p-0 hover:bg-gray-100 opacity-0 group-hover:opacity-100 transition-opacity duration-200"
                >
                  <MoreVertical className="h-4 w-4" />
                </Button>
              </DropdownMenuTrigger>
              <DropdownMenuContent align="end">
                <DropdownMenuItem onClick={() => handleExpandChart('review-cycle')}>
                  <Expand className="mr-2 h-4 w-4" />
                  放大查看
                </DropdownMenuItem>
                <DropdownMenuSeparator />
                <DropdownMenuItem>
                  <Download className="mr-2 h-4 w-4" />
                  下载图表
                </DropdownMenuItem>
              </DropdownMenuContent>
            </DropdownMenu>
          </CardHeader>
          <CardContent className="flex items-center justify-center flex-1">
            <div className="text-center text-gray-500">
              <p>图表占位符</p>
              <p className="text-sm mt-2">审查周期分析</p>
            </div>
          </CardContent>
        </Card>

        <Card className="bg-white/80 backdrop-blur-lg border border-white/50 group flex-1">
          <CardHeader className="flex flex-row items-center justify-between pb-3">
            <div className="flex items-center gap-3">
              <div className="w-1.5 h-6 bg-gradient-to-b from-blue-600 to-cyan-400 rounded-full"></div>
              <CardTitle className="text-[18px] font-normal">专家评分</CardTitle>
            </div>
            <DropdownMenu>
              <DropdownMenuTrigger asChild>
                <Button 
                  variant="ghost" 
                  size="sm" 
                  className="h-8 w-8 p-0 hover:bg-gray-100 opacity-0 group-hover:opacity-100 transition-opacity duration-200"
                >
                  <MoreVertical className="h-4 w-4" />
                </Button>
              </DropdownMenuTrigger>
              <DropdownMenuContent align="end">
                <DropdownMenuItem onClick={() => handleExpandChart('expert-score')}>
                  <Expand className="mr-2 h-4 w-4" />
                  放大查看
                </DropdownMenuItem>
                <DropdownMenuSeparator />
                <DropdownMenuItem>
                  <Download className="mr-2 h-4 w-4" />
                  下载图表
                </DropdownMenuItem>
              </DropdownMenuContent>
            </DropdownMenu>
          </CardHeader>
          <CardContent className="flex items-center justify-center flex-1">
            <div className="text-center text-gray-500">
              <p>图表占位符</p>
              <p className="text-sm mt-2">专家评分统计</p>
            </div>
          </CardContent>
        </Card>

        <Card className="bg-white/80 backdrop-blur-lg border border-white/50 group flex-1">
          <CardHeader className="flex flex-row items-center justify-between pb-3">
            <div className="flex items-center gap-3">
              <div className="w-1.5 h-6 bg-gradient-to-b from-blue-600 to-cyan-400 rounded-full"></div>
              <CardTitle className="text-[18px] font-normal">风险评估</CardTitle>
            </div>
            <DropdownMenu>
              <DropdownMenuTrigger asChild>
                <Button 
                  variant="ghost" 
                  size="sm" 
                  className="h-8 w-8 p-0 hover:bg-gray-100 opacity-0 group-hover:opacity-100 transition-opacity duration-200"
                >
                  <MoreVertical className="h-4 w-4" />
                </Button>
              </DropdownMenuTrigger>
              <DropdownMenuContent align="end">
                <DropdownMenuItem onClick={() => handleExpandChart('risk-assessment')}>
                  <Expand className="mr-2 h-4 w-4" />
                  放大查看
                </DropdownMenuItem>
                <DropdownMenuSeparator />
                <DropdownMenuItem>
                  <Download className="mr-2 h-4 w-4" />
                  下载图表
                </DropdownMenuItem>
              </DropdownMenuContent>
            </DropdownMenu>
          </CardHeader>
          <CardContent className="flex items-center justify-center flex-1">
            <div className="text-center text-gray-500">
              <p>图表占位符</p>
              <p className="text-sm mt-2">风险评估</p>
            </div>
          </CardContent>
        </Card>

        <Card className="bg-white/80 backdrop-blur-lg border border-white/50 group flex-1">
          <CardHeader className="flex flex-row items-center justify-between pb-3">
            <div className="flex items-center gap-3">
              <div className="w-1.5 h-6 bg-gradient-to-b from-blue-600 to-cyan-400 rounded-full"></div>
              <CardTitle className="text-[18px] font-normal">合规性分析</CardTitle>
            </div>
            <DropdownMenu>
              <DropdownMenuTrigger asChild>
                <Button 
                  variant="ghost" 
                  size="sm" 
                  className="h-8 w-8 p-0 hover:bg-gray-100 opacity-0 group-hover:opacity-100 transition-opacity duration-200"
                >
                  <MoreVertical className="h-4 w-4" />
                </Button>
              </DropdownMenuTrigger>
              <DropdownMenuContent align="end">
                <DropdownMenuItem onClick={() => handleExpandChart('compliance-analysis')}>
                  <Expand className="mr-2 h-4 w-4" />
                  放大查看
                </DropdownMenuItem>
                <DropdownMenuSeparator />
                <DropdownMenuItem>
                  <Download className="mr-2 h-4 w-4" />
                  下载图表
                </DropdownMenuItem>
              </DropdownMenuContent>
            </DropdownMenu>
          </CardHeader>
          <CardContent className="flex items-center justify-center flex-1">
            <div className="text-center text-gray-500">
              <p>图表占位符</p>
              <p className="text-sm mt-2">合规性分析</p>
            </div>
          </CardContent>
        </Card>


      </div>
    </div>
  )

  // 科研项目内容
  const renderProjectsContent = () => (
    <div className="h-[calc(100vh-160px)] flex gap-4">
      {/* 左侧三个统计图卡片 - 自适应屏幕40%宽度 */}
      <div className="flex flex-col gap-4 w-2/5 pl-6">
        {/* 项目进度全景分析 */}
        <Card className="bg-white/80 backdrop-blur-lg border border-white/50 group w-full h-[200px]">
          <CardHeader className="flex flex-row items-center justify-between pb-3">
            <div className="flex items-center gap-3">
              <div className="w-2 h-6 bg-gradient-to-b from-blue-600 to-cyan-400 rounded-full"></div>
              <CardTitle className="text-[18px] font-normal">项目进度全景分析</CardTitle>
            </div>
            <DropdownMenu>
              <DropdownMenuTrigger asChild>
                <Button 
                  variant="ghost" 
                  size="sm" 
                  className="h-8 w-8 p-0 hover:bg-gray-100 opacity-0 group-hover:opacity-100 transition-opacity duration-200"
                >
                  <MoreVertical className="h-4 w-4" />
                </Button>
              </DropdownMenuTrigger>
              <DropdownMenuContent align="end">
                <DropdownMenuItem onClick={() => handleExpandChart('project-overview')}>
                  <Expand className="mr-2 h-4 w-4" />
                  放大查看
                </DropdownMenuItem>
                <DropdownMenuSeparator />
                <DropdownMenuItem>
                  <Download className="mr-2 h-4 w-4" />
                  下载图表
                </DropdownMenuItem>
              </DropdownMenuContent>
            </DropdownMenu>
          </CardHeader>
          <CardContent className="flex items-center justify-center flex-1">
            <div className="text-center text-gray-500">
              <p>图表占位符</p>
              <p className="text-sm mt-2">项目进度全景分析</p>
            </div>
          </CardContent>
        </Card>

        {/* 科研项目数据统计分析 */}
        <Card className="bg-gradient-to-br from-white/90 to-blue-50/30 backdrop-blur-lg border border-blue-200/50 group w-full relative overflow-hidden">
          {/* 科技感装饰元素 */}
          <div className="absolute top-0 right-0 w-20 h-20 bg-gradient-to-bl from-blue-400/20 to-transparent rounded-full -translate-y-10 translate-x-10"></div>
          <div className="absolute bottom-0 left-0 w-16 h-16 bg-gradient-to-tr from-cyan-400/15 to-transparent rounded-full translate-y-8 -translate-x-8"></div>
          
          <CardHeader className="flex flex-row items-center justify-between pb-3 relative z-10">
            <div className="flex items-center gap-3">
              <div className="relative">
                <FileText className="w-6 h-6 text-blue-600 drop-shadow-sm" />
                <div className="absolute -top-1 -right-1 w-2 h-2 bg-blue-400 rounded-full animate-pulse"></div>
              </div>
              <CardTitle className="text-[18px] font-semibold text-gray-800 bg-gradient-to-r from-blue-600 to-cyan-600 bg-clip-text text-transparent">
                科研项目数据统计分析
              </CardTitle>
            </div>
          </CardHeader>
          
          <CardContent className="p-6 pt-6 flex items-center justify-center relative z-10">
            <div className="text-center text-gray-700 space-y-4 px-6 w-full pr-24">
              <div className="text-sm leading-relaxed">
                <div className="text-left space-y-3">
                  <p className="text-gray-600 leading-relaxed">
                    本模块提供全面的科研项目数据统计分析功能，支持项目类型分布统计、项目级别分析、学科领域分布以及进度状态监控等核心功能。
                  </p>
                  <p className="text-gray-600 leading-relaxed">
                    通过多维度的数据挖掘和分析，为用户提供项目类型分布统计功能，包括基础研究、应用研究、技术开发等分类统计；项目级别分析功能，涵盖国家级、省级、市级项目占比统计；学科领域分布功能，支持医学、生物、化学等学科项目统计；以及进度状态监控功能，实现立项、进行中、结题等状态跟踪。
                  </p>
                  <p className="text-gray-600 leading-relaxed">
                    系统采用先进的数据可视化技术，为用户提供直观、清晰的科研项目管理视图，助力科研工作的科学决策和高效管理。
                  </p>
                </div>
              </div>
            </div>
            
            {/* 纵向科技感按钮 - 一直显示 */}
            <div className="absolute top-1/2 right-6 transform -translate-y-1/2">
              <Button 
                size="sm" 
                className="bg-gradient-to-br from-blue-500 via-blue-600 to-cyan-600 hover:from-blue-600 hover:via-blue-700 hover:to-cyan-700 text-white shadow-lg hover:shadow-xl transform hover:scale-105 transition-all duration-300 border-0 px-4 h-[84px] rounded-lg font-medium flex flex-col items-center justify-center gap-2 backdrop-blur-sm"
              >
                <span className="text-xs font-medium">立即</span>
                <span className="text-xs font-medium">前往</span>
                <ArrowRight className="w-4 h-4 drop-shadow-sm" />
              </Button>
            </div>
          </CardContent>
          
          {/* 底部科技感装饰线 */}
          <div className="absolute bottom-0 left-0 right-0 h-px bg-gradient-to-r from-transparent via-blue-300 to-transparent"></div>
        </Card>

        {/* 年度趋势分析 */}
        <Card className="bg-white/80 backdrop-blur-lg border border-white/50 group w-full h-[200px]">
          <CardHeader className="flex flex-row items-center justify-between pb-3">
            <div className="flex items-center gap-3">
              <div className="w-1.5 h-6 bg-gradient-to-b from-blue-600 to-cyan-400 rounded-full"></div>
              <CardTitle className="text-[18px] font-normal">年度趋势分析</CardTitle>
            </div>
            <DropdownMenu>
              <DropdownMenuTrigger asChild>
                <Button 
                  variant="ghost" 
                  size="sm" 
                  className="h-8 w-8 p-0 hover:bg-gray-100 opacity-0 group-hover:opacity-100 transition-opacity duration-200"
                >
                  <MoreVertical className="h-4 w-4" />
                </Button>
              </DropdownMenuTrigger>
              <DropdownMenuContent align="end">
                <DropdownMenuItem onClick={() => handleExpandChart('annual-trend')}>
                  <Expand className="mr-2 h-4 w-4" />
                  放大查看
                </DropdownMenuItem>
                <DropdownMenuSeparator />
                <DropdownMenuItem>
                  <Download className="mr-2 h-4 w-4" />
                  下载图表
                </DropdownMenuItem>
              </DropdownMenuContent>
            </DropdownMenu>
          </CardHeader>
          <CardContent className="flex items-center justify-center flex-1">
            <div className="text-center text-gray-500">
              <p>图表占位符</p>
              <p className="text-sm mt-2">年度趋势分析</p>
            </div>
          </CardContent>
        </Card>
      </div>

      {/* 右侧空白区域 - 占剩余宽度 */}
      <div className="flex-1"></div>
    </div>
  )

  // 渲染成果转化内容
  const renderFundingContent = () => {
    return (
      <div className="space-y-4 h-full">
        {/* 重新布局：左侧大卡片占两行高度，右侧两个独立卡片 */}
        <div className="flex gap-4" style={{ height: '824px' }}>
          {/* 各研究所目标达成对比图 - 占50%宽度，两行高度 */}
          <div className="w-1/2">
            <Card className="bg-white/80 backdrop-blur-lg border border-white/50 group h-full">
              <CardHeader className="flex flex-row items-center justify-between pb-3">
                <div className="flex items-center gap-3">
                  <div className="w-1.5 h-6 bg-gradient-to-b from-blue-600 to-cyan-400 rounded-full"></div>
                  <CardTitle className="text-[16px] font-normal">各研究所目标达成对比图</CardTitle>
                </div>
                <DropdownMenu>
                  <DropdownMenuTrigger asChild>
                    <Button 
                      variant="ghost" 
                      size="sm" 
                      className="h-8 w-8 p-0 hover:bg-gray-100 opacity-0 group-hover:opacity-100 transition-opacity duration-200"
                    >
                      <MoreVertical className="h-4 w-4" />
                    </Button>
                  </DropdownMenuTrigger>
                  <DropdownMenuContent align="end">
                    <DropdownMenuItem onClick={() => handleExpandChart('research-institute-target-comparison')}>
                      <Expand className="mr-2 h-4 w-4" />
                      放大查看
                    </DropdownMenuItem>
                    <DropdownMenuSeparator />
                    <DropdownMenuItem>
                      <Download className="mr-2 h-4 w-4" />
                      下载图表
                    </DropdownMenuItem>
                  </DropdownMenuContent>
                </DropdownMenu>
              </CardHeader>
              <CardContent className="h-[769px] px-2 pt-2 pb-6 flex flex-col">
                {/* 图表区域 */}
                <div className="h-[345px] w-full">
                  <DynamicResearchInstituteTargetChart />
                </div>
                
                {/* 列表占位符区域 */}
                <div className="flex-1 mt-4 px-2">
                  <div className="border-t border-gray-200 pt-4">
                    <h4 className="text-sm font-medium text-gray-700 mb-3">详细数据列表</h4>
                    
                    {/* 筛选控件 */}
                    <div className="mb-4 flex flex-wrap gap-3 items-center">
                      {/* 搜索框 */}
                      <div className="flex-1 min-w-[200px]">
                        <input
                          type="text"
                          placeholder="搜索研究所名称..."
                          value={searchTerm}
                          onChange={(e) => setSearchTerm(e.target.value)}
                          className="w-full px-3 py-1.5 text-xs border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                        />
                      </div>
                      
                      {/* 状态筛选 */}
                      <select
                        value={filterStatus}
                        onChange={(e) => setFilterStatus(e.target.value as 'all' | 'completed' | 'uncompleted')}
                        className="px-3 py-1.5 text-xs border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                      >
                        <option value="all">全部状态</option>
                        <option value="completed">已完成 (≥100%)</option>
                        <option value="uncompleted">未完成 (<100%)</option>
                      </select>
                      
                      {/* 清空筛选 */}
                      {(searchTerm || filterStatus !== 'all') && (
                        <button
                          onClick={() => {
                            setSearchTerm('');
                            setFilterStatus('all');
                            setSortField(null);
                          }}
                          className="px-3 py-1.5 text-xs text-gray-600 hover:text-gray-800 border border-gray-300 rounded-md hover:bg-gray-50 transition-colors"
                        >
                          清空筛选
                        </button>
                      )}
                    </div>
                    
                    {/* 数据表格 */}
                    <div className="overflow-y-auto max-h-[300px] scrollbar-hide">
                      <table className="w-full text-xs">
                        <thead className="bg-gray-50 sticky top-0">
                          <tr>
                            <th 
                              className="px-3 py-2 text-left font-medium text-gray-700 cursor-pointer hover:bg-gray-100 transition-colors select-none"
                              onClick={() => handleSort('name')}
                            >
                              <div className="flex items-center gap-1">
                                研究所名称
                                {sortField === 'name' && (
                                  <span className="text-blue-600">
                                    {sortDirection === 'asc' ? '↑' : '↓'}
                                  </span>
                                )}
                              </div>
                            </th>
                            <th 
                              className="px-3 py-2 text-right font-medium text-gray-700 cursor-pointer hover:bg-gray-100 transition-colors select-none"
                              onClick={() => handleSort('target')}
                            >
                              <div className="flex items-center justify-end gap-1">
                                设定目标金额
                                {sortField === 'target' && (
                                  <span className="text-blue-600">
                                    {sortDirection === 'asc' ? '↑' : '↓'}
                                  </span>
                                )}
                              </div>
                            </th>
                            <th 
                              className="px-3 py-2 text-right font-medium text-gray-700 cursor-pointer hover:bg-gray-100 transition-colors select-none"
                              onClick={() => handleSort('actual')}
                            >
                              <div className="flex items-center justify-end gap-1">
                                实际到院金额
                                {sortField === 'actual' && (
                                  <span className="text-blue-600">
                                    {sortDirection === 'asc' ? '↑' : '↓'}
                                  </span>
                                )}
                              </div>
                            </th>
                            <th className="px-3 py-2 text-right font-medium text-gray-700">
                              超额金额
                            </th>
                            <th 
                              className="px-3 py-2 text-right font-medium text-gray-700 cursor-pointer hover:bg-gray-100 transition-colors select-none"
                              onClick={() => handleSort('completion')}
                            >
                              <div className="flex items-center justify-end gap-1">
                                完成率
                                {sortField === 'completion' && (
                                  <span className="text-blue-600">
                                    {sortDirection === 'asc' ? '↑' : '↓'}
                                  </span>
                                )}
                              </div>
                            </th>
                          </tr>
                        </thead>
                        <tbody>
                          {getFilteredAndSortedData().map((institute, index) => {
                            const excessAmount = institute.actual > institute.target ? institute.actual - institute.target : 0;
                            const isOverTarget = institute.completion >= 100;
                            
                            return (
                              <tr key={index} className="hover:bg-gray-50 transition-colors">
                                <td className="px-3 py-2 font-medium text-gray-800">
                                  {institute.name}
                                </td>
                                <td className="px-3 py-2 text-right text-gray-700">
                                  {institute.target.toLocaleString()}万元
                                </td>
                                <td className="px-3 py-2 text-right font-medium">
                                  <span className={isOverTarget ? 'text-green-600' : 'text-red-500'}>
                                    {institute.actual.toLocaleString()}万元
                                  </span>
                                </td>
                                <td className="px-3 py-2 text-right">
                                  {excessAmount > 0 ? (
                                    <span className="text-green-600 font-medium">
                                      +{excessAmount.toLocaleString()}万元
                                    </span>
                                  ) : (
                                    <span className="text-gray-400">-</span>
                                  )}
                                </td>
                                <td className="px-3 py-2 text-right font-medium">
                                  <span className={`${
                                    institute.completion >= 100 
                                      ? 'text-green-600 bg-green-50' 
                                      : institute.completion >= 95 
                                        ? 'text-yellow-600 bg-yellow-50'
                                        : 'text-red-500 bg-red-50'
                                  } px-2 py-1 rounded-full text-xs`}>
                                    {institute.completion}%
                                  </span>
                                </td>
                              </tr>
                            );
                          })}
                          
                          {/* 总计行 */}
                          {(() => {
                            const filteredData = getFilteredAndSortedData();
                            
                            const totalTarget = filteredData.reduce((sum, item) => sum + item.target, 0);
                            const totalActual = filteredData.reduce((sum, item) => sum + item.actual, 0);
                            const totalExcess = totalActual > totalTarget ? totalActual - totalTarget : 0;
                            const totalCompletion = totalTarget > 0 ? ((totalActual / totalTarget) * 100).toFixed(1) : '0.0';
                            
                            return (
                              <tr className="bg-blue-50 font-medium border-t border-gray-200 sticky bottom-0">
                                <td className="px-3 py-2 text-blue-800">
                                  总计 ({filteredData.length}项)
                                </td>
                                <td className="px-3 py-2 text-right text-blue-800">
                                  {totalTarget.toLocaleString()}万元
                                </td>
                                <td className="px-3 py-2 text-right text-blue-800">
                                  {totalActual.toLocaleString()}万元
                                </td>
                                <td className="px-3 py-2 text-right text-blue-800">
                                  {totalExcess > 0 ? `+${totalExcess.toLocaleString()}万元` : '-'}
                                </td>
                                <td className="px-3 py-2 text-right">
                                  <span className={`${
                                    parseFloat(totalCompletion) >= 100 
                                      ? 'text-green-600 bg-green-100' 
                                      : 'text-red-500 bg-red-100'
                                  } px-2 py-1 rounded-full text-xs font-medium`}>
                                    {totalCompletion}%
                                  </span>
                                </td>
                              </tr>
                            );
                          })()}
                        </tbody>
                      </table>
                    </div>
                  </div>
                </div>
              </CardContent>
            </Card>
          </div>

          {/* 右侧两个卡片垂直排列 */}
          <div className="w-1/2 flex flex-col gap-4">
            {/* 成果转化综合分析 */}
            <div className="flex-1">
              <Card className="bg-white/80 backdrop-blur-lg border border-white/50 group h-full">
                <CardHeader className="flex flex-row items-center justify-between pb-3">
                  <div className="flex items-center gap-3">
                    <div className="w-1.5 h-6 bg-gradient-to-b from-blue-600 to-cyan-400 rounded-full"></div>
                    <CardTitle className="text-[14px] font-normal">成果转化综合分析</CardTitle>
                  </div>
                  <DropdownMenu>
                    <DropdownMenuTrigger asChild>
                      <Button 
                        variant="ghost" 
                        size="sm" 
                        className="h-8 w-8 p-0 hover:bg-gray-100 opacity-0 group-hover:opacity-100 transition-opacity duration-200"
                      >
                        <MoreVertical className="h-4 w-4" />
                      </Button>
                    </DropdownMenuTrigger>
                    <DropdownMenuContent align="end">
                      <DropdownMenuItem onClick={() => handleExpandChart('target-completion-status')}>
                        <Expand className="mr-2 h-4 w-4" />
                        放大查看
                      </DropdownMenuItem>
                      <DropdownMenuSeparator />
                      <DropdownMenuItem>
                        <Download className="mr-2 h-4 w-4" />
                        下载图表
                      </DropdownMenuItem>
                    </DropdownMenuContent>
                  </DropdownMenu>
                </CardHeader>
                <CardContent className="h-[345px] px-3 pt-2 pb-3">
                  <div className="h-full flex gap-4">
                    {/* 左侧：饼图 */}
                    <div className="w-1/2">
                      <DynamicTargetCompletionStatusChart activeMode="completion" />
                    </div>
                    
                    {/* 右侧：排行榜 */}
                    <div className="w-1/2 flex flex-col gap-2">
                      <div className="text-xs text-gray-600 font-medium mb-1">完成率排行榜</div>
                      
                      {/* 排行榜列表 - 柱状图样式 */}
                      <div className="flex-1 space-y-2">
                        {[
                          { rank: 1, name: "心血管研究所", rate: 112.0, projects: 45, color: "#FFD700", bgColor: "bg-gradient-to-r from-yellow-100 to-yellow-50" },
                          { rank: 2, name: "消化系统研究所", rate: 111.9, projects: 38, color: "#C0C0C0", bgColor: "bg-gradient-to-r from-gray-100 to-gray-50" },
                          { rank: 3, name: "眼科研究所", rate: 110.5, projects: 29, color: "#CD7F32", bgColor: "bg-gradient-to-r from-orange-100 to-orange-50" },
                          { rank: 4, name: "骨科研究所", rate: 108.8, projects: 21, color: "#3B82F6", bgColor: "bg-gradient-to-r from-blue-100 to-blue-50" },
                          { rank: 5, name: "口腔医学研究所", rate: 107.3, projects: 16, color: "#8B5CF6", bgColor: "bg-gradient-to-r from-purple-100 to-purple-50" }
                        ].map((item, index) => {
                          const maxProjects = 45; // 最大项目数
                          const barWidth = (item.projects / maxProjects) * 100;
                          return (
                            <div key={index} className="relative">
                              {/* 排名标识 */}
                              <div className="flex items-center gap-1.5 mb-0.5">
                                <div 
                                  className={`w-5 h-5 rounded-full flex items-center justify-center text-xs font-bold text-white shadow-sm ${
                                    index === 0 ? 'bg-gradient-to-br from-yellow-400 to-yellow-600' :
                                    index === 1 ? 'bg-gradient-to-br from-gray-400 to-gray-600' :
                                    index === 2 ? 'bg-gradient-to-br from-orange-400 to-orange-600' :
                                    index === 3 ? 'bg-gradient-to-br from-blue-400 to-blue-600' :
                                    'bg-gradient-to-br from-purple-400 to-purple-600'
                                  }`}
                                >
                                  {item.rank}
                                </div>
                                <div className="text-xs font-medium text-gray-800 truncate flex-1">{item.name}</div>
                                <div className="text-xs font-bold" style={{ color: item.color }}>{item.rate}%</div>
                              </div>
                              
                              {/* 柱状图条 */}
                              <div className="relative h-4 bg-gray-100 rounded-md overflow-hidden">
                                <div 
                                  className={`h-full ${item.bgColor} border-r-2 transition-all duration-700 ease-out`}
                                  style={{ 
                                    width: `${barWidth}%`,
                                    borderRightColor: item.color
                                  }}
                                >
                                  {/* 柱状图内的渐变效果 */}
                                  <div 
                                    className="h-full opacity-60"
                                    style={{ 
                                      background: `linear-gradient(to right, transparent 0%, ${item.color}20 70%, ${item.color}40 100%)`
                                    }}
                                  ></div>
                                </div>
                                
                                {/* 项目数量标签 */}
                                <div className="absolute right-1 top-1/2 transform -translate-y-1/2">
                                  <span className="text-xs text-gray-500 bg-white px-1 py-0.5 rounded shadow-sm">
                                    {item.projects}项
                                  </span>
                                </div>
                              </div>
                            </div>
                          );
                        })}
                      </div>

                    </div>
                  </div>
                </CardContent>
              </Card>
            </div>

            {/* 多维度成果转化分析图 */}
            <div className="flex-1">
              <Card className="bg-white/80 backdrop-blur-lg border border-white/50 group h-full">
                <CardHeader className="flex flex-row items-center justify-between pb-3">
                  <div className="flex items-center gap-4">
                    <div className="flex items-center gap-3">
                      <div className="w-1.5 h-6 bg-gradient-to-b from-blue-600 to-cyan-400 rounded-full"></div>
                      <CardTitle className="text-[14px] font-normal">多维度成果转化分析图</CardTitle>
                    </div>
                    
                    {/* 维度切换按钮组 */}
                    <div className="flex items-center gap-1 ml-2">
                      <div className="flex items-center bg-gray-100/80 rounded-lg p-1">
                        <button
                          className={`px-2 py-1 text-xs font-medium rounded-md transition-all duration-200 ${
                            multiDimensionMode === 'institute' ? 'bg-white text-blue-600 shadow-sm' : 'text-gray-600 hover:text-gray-900'
                          }`}
                          onClick={() => setMultiDimensionMode('institute')}
                        >
                          我院类别
                        </button>
                        <button
                          className={`px-2 py-1 text-xs font-medium rounded-md transition-all duration-200 ${
                            multiDimensionMode === 'contract' ? 'bg-white text-blue-600 shadow-sm' : 'text-gray-600 hover:text-gray-900'
                          }`}
                          onClick={() => setMultiDimensionMode('contract')}
                        >
                          合同类型
                        </button>
                      </div>
                    </div>
                  </div>
                  <DropdownMenu>
                    <DropdownMenuTrigger asChild>
                      <Button 
                        variant="ghost" 
                        size="sm" 
                        className="h-8 w-8 p-0 hover:bg-gray-100 opacity-0 group-hover:opacity-100 transition-opacity duration-200"
                      >
                        <MoreVertical className="h-4 w-4" />
                      </Button>
                    </DropdownMenuTrigger>
                    <DropdownMenuContent align="end">
                      <DropdownMenuItem onClick={() => handleExpandChart('multi-dimensional-analysis')}>
                        <Expand className="mr-2 h-4 w-4" />
                        放大查看
                      </DropdownMenuItem>
                      <DropdownMenuSeparator />
                      <DropdownMenuItem>
                        <Download className="mr-2 h-4 w-4" />
                        下载图表
                      </DropdownMenuItem>
                    </DropdownMenuContent>
                  </DropdownMenu>
                </CardHeader>
                <CardContent className="h-[345px] px-2 pt-2 pb-6">
                  <div className="h-full w-full">
                    <DynamicMultiDimensionalAnalysisChart activeMode={multiDimensionMode} />
                  </div>
                </CardContent>
              </Card>
            </div>
          </div>
        </div>

        {/* 第二行：各研究所横向科研项目统计 & 知识产权转化效能图 */}
        <div className="flex gap-4" style={{ height: '400px' }}>
          {/* 各研究所横向科研项目统计 - 占50%宽度 */}
          <div className="flex-1">
            <Card className="bg-white/80 backdrop-blur-lg border border-white/50 group h-full">
              <CardHeader className="flex flex-row items-center justify-between pb-3">
                <div className="flex items-center gap-3">
                  <div className="w-1.5 h-6 bg-gradient-to-b from-blue-600 to-cyan-400 rounded-full"></div>
                  <CardTitle className="text-[16px] font-normal">各研究所横向科研项目统计</CardTitle>
                </div>
                <DropdownMenu>
                  <DropdownMenuTrigger asChild>
                    <Button 
                      variant="ghost" 
                      size="sm" 
                      className="h-8 w-8 p-0 hover:bg-gray-100 opacity-0 group-hover:opacity-100 transition-opacity duration-200"
                    >
                      <MoreVertical className="h-4 w-4" />
                    </Button>
                  </DropdownMenuTrigger>
                  <DropdownMenuContent align="end">
                    <DropdownMenuItem onClick={() => handleExpandChart('horizontal-research-projects')}>
                      <Expand className="mr-2 h-4 w-4" />
                      放大查看
                    </DropdownMenuItem>
                    <DropdownMenuSeparator />
                    <DropdownMenuItem>
                      <Download className="mr-2 h-4 w-4" />
                      下载图表
                    </DropdownMenuItem>
                  </DropdownMenuContent>
                </DropdownMenu>
              </CardHeader>
              <CardContent className="h-[345px] px-2 pt-2 pb-6">
                <div className="h-full w-full">
                  <DynamicHorizontalResearchProjectsChart />
                </div>
              </CardContent>
            </Card>
          </div>
        
          {/* 知识产权转化效能图卡片 - 占50%宽度 */}
          <div className="flex-1">
            <Card className="bg-white/80 backdrop-blur-lg border border-white/50 group h-full">
              <CardHeader className="flex flex-row items-center justify-between pb-3">
                <div className="flex items-center gap-3">
                  <div className="w-1.5 h-6 bg-gradient-to-b from-blue-600 to-cyan-400 rounded-full"></div>
                  <CardTitle className="text-[14px] font-normal">知识产权转化效能图</CardTitle>
                </div>
                <DropdownMenu>
                  <DropdownMenuTrigger asChild>
                    <Button 
                      variant="ghost" 
                      size="sm" 
                      className="h-8 w-8 p-0 hover:bg-gray-100 opacity-0 group-hover:opacity-100 transition-opacity duration-200"
                    >
                      <MoreVertical className="h-4 w-4" />
                    </Button>
                  </DropdownMenuTrigger>
                  <DropdownMenuContent align="end">
                    <DropdownMenuItem>
                      <Expand className="mr-2 h-4 w-4" />
                      放大查看
                    </DropdownMenuItem>
                    <DropdownMenuSeparator />
                    <DropdownMenuItem>
                      <Download className="mr-2 h-4 w-4" />
                      下载图表
                    </DropdownMenuItem>
                  </DropdownMenuContent>
                </DropdownMenu>
              </CardHeader>
              <CardContent className="h-[345px] px-3 pt-2 pb-3">
                <div className="h-full flex flex-col">
                  {/* 三个环形图并排显示 */}
                  <div className="flex gap-2" style={{ height: '300px' }}>
                    {/* 品种环形图 */}
                    <div className="flex-1">
                      <DynamicIPTransformationRingChart type="variety" />
                    </div>
                    
                    {/* 专利环形图 */}
                    <div className="flex-1">
                      <DynamicIPTransformationRingChart type="patent" />
                    </div>
                    
                    {/* 软件著作权环形图 */}
                    <div className="flex-1">
                      <DynamicIPTransformationRingChart type="software" />
                    </div>
                  </div>
                  
                  {/* 统一图例 - 参考雷达图的底部间距 */}
                  <div className="flex justify-center gap-4 pt-1" style={{ paddingBottom: '10px', marginTop: '-20px' }}>
                    <div className="flex items-center gap-2">
                      <div className="w-3 h-3 rounded-full" style={{ backgroundColor: '#22C55E' }}></div>
                      <span className="text-xs text-gray-600">已转化</span>
                    </div>
                    <div className="flex items-center gap-2">
                      <div className="w-3 h-3 rounded-full" style={{ backgroundColor: '#E5E7EB' }}></div>
                      <span className="text-xs text-gray-600">未转化</span>
                    </div>
                  </div>
                </div>
              </CardContent>
            </Card>
          </div>
        </div>

        {/* 第三行：各研究所收益分配结构图 */}
        <div className="flex gap-4" style={{ height: '400px' }}>
          {/* 各研究所收益分配结构图 - 占100%宽度 */}
          <div className="w-full">
            <Card className="bg-white/80 backdrop-blur-lg border border-white/50 group h-full">
              <CardHeader className="flex flex-row items-center justify-between pb-3">
                <div className="flex items-center gap-3">
                  <div className="w-1.5 h-6 bg-gradient-to-b from-blue-600 to-cyan-400 rounded-full"></div>
                  <CardTitle className="text-[16px] font-normal">各研究所收益分配结构图</CardTitle>
                </div>
                <DropdownMenu>
                  <DropdownMenuTrigger asChild>
                    <Button 
                      variant="ghost" 
                      size="sm" 
                      className="h-8 w-8 p-0 hover:bg-gray-100 opacity-0 group-hover:opacity-100 transition-opacity duration-200"
                    >
                      <MoreVertical className="h-4 w-4" />
                    </Button>
                  </DropdownMenuTrigger>
                  <DropdownMenuContent align="end">
                    <DropdownMenuItem onClick={() => handleExpandChart('revenue-distribution')}>
                      <Expand className="mr-2 h-4 w-4" />
                      放大查看
                    </DropdownMenuItem>
                    <DropdownMenuSeparator />
                    <DropdownMenuItem>
                      <Download className="mr-2 h-4 w-4" />
                      下载图表
                    </DropdownMenuItem>
                  </DropdownMenuContent>
                </DropdownMenu>
              </CardHeader>
              <CardContent className="h-[345px] px-2 pt-2 pb-6">
                <div className="h-full w-full">
                  <DynamicRevenueDistributionChart />
                </div>
              </CardContent>
            </Card>
          </div>
        </div>

        {/* 注释掉测试和测试3统计图 - 暂时隐藏但保留代码 */}
        {/*
        {/* 第四行：测试与测试3 */}
        {/*<div className="flex gap-4" style={{ height: '400px' }}>
          {/* 测试卡片 - 占50%宽度 */}
          {/*<div className="flex-1">
            <Card className="bg-white/80 backdrop-blur-lg border border-white/50 group h-full">
              <CardHeader className="flex flex-row items-center justify-between pb-3">
                <div className="flex items-center gap-3">
                  <div className="w-1.5 h-6 bg-gradient-to-b from-blue-600 to-cyan-400 rounded-full"></div>
                  <CardTitle className="text-[14px] font-normal">测试</CardTitle>
                </div>
                <DropdownMenu>
                  <DropdownMenuTrigger asChild>
                    <Button 
                      variant="ghost" 
                      size="sm" 
                      className="h-8 w-8 p-0 hover:bg-gray-100 opacity-0 group-hover:opacity-100 transition-opacity duration-200"
                    >
                      <MoreVertical className="h-4 w-4" />
                    </Button>
                  </DropdownMenuTrigger>
                  <DropdownMenuContent align="end">
                    <DropdownMenuItem>
                      <Expand className="mr-2 h-4 w-4" />
                      放大查看
                    </DropdownMenuItem>
                    <DropdownMenuSeparator />
                    <DropdownMenuItem>
                      <Download className="mr-2 h-4 w-4" />
                      下载图表
                    </DropdownMenuItem>
                  </DropdownMenuContent>
                </DropdownMenu>
              </CardHeader>
              <CardContent className="h-[345px] px-2 pt-2 pb-6">
                <div className="h-full flex gap-4">
                  {/* 左侧雷达图 - 技术类型分析 */}
                  {/*<div className="w-1/2">
                    <DynamicTestRadarChart type="tech" />
                  </div>
                  
                  {/* 右侧雷达图 - 项目分类分析 */}
                  {/*<div className="w-1/2">
                    <DynamicTestRadarChart type="category" />
                  </div>
                </div>
              </CardContent>
            </Card>
          </div>
          
          {/* 测试3 - 占50%宽度 */}
          {/*<div className="flex-1">
            <Card className="bg-white/80 backdrop-blur-lg border border-white/50 group h-full">
              <CardHeader className="flex flex-row items-center justify-between pb-3">
                <div className="flex items-center gap-3">
                  <div className="w-1.5 h-6 bg-gradient-to-b from-blue-600 to-cyan-400 rounded-full"></div>
                  <CardTitle className="text-[14px] font-normal">测试3</CardTitle>
                </div>
                <DropdownMenu>
                  <DropdownMenuTrigger asChild>
                    <Button 
                      variant="ghost" 
                      size="sm" 
                      className="h-8 w-8 p-0 hover:bg-gray-100 opacity-0 group-hover:opacity-100 transition-opacity duration-200"
                    >
                      <MoreVertical className="h-4 w-4" />
                    </Button>
                  </DropdownMenuTrigger>
                  <DropdownMenuContent align="end">
                    <DropdownMenuItem onClick={() => handleExpandChart('ip-transformation-efficiency')}>
                      <Expand className="mr-2 h-4 w-4" />
                      放大查看
                    </DropdownMenuItem>
                    <DropdownMenuSeparator />
                    <DropdownMenuItem>
                      <Download className="mr-2 h-4 w-4" />
                      下载图表
                    </DropdownMenuItem>
                  </DropdownMenuContent>
                </DropdownMenu>
              </CardHeader>
              <CardContent className="h-[345px] px-2 pt-2 pb-6">
                <div className="h-full w-full">
                  <DynamicIPTransformationEfficiencyChart />
                </div>
              </CardContent>
            </Card>
          </div>
        </div>*/}
      </div>
    </div>
  )

  // 渲染放大的图表组件
  const renderExpandedChart = () => {
    switch (expandedChart) {
      case 'research-output':
        return <DynamicSingleBarChart />
      case 'project-application':
        return <DynamicProjectApplicationChart />
      case 'funding-distribution':
        return <DynamicProjectFundingChart />
      case 'project-status':
        return <DynamicProjectStatusChart />
      case 'task-completion':
        return <DynamicTeamDistributionChart />
      case 'project-overview':
        return <DynamicProjectProgressPanoramaChart />
      case 'project-type':
        return <DynamicProjectTypeDistributionChart />
      case 'project-level':
        return <DynamicProjectLevelStatisticsChart />
      case 'research-institute-target-comparison':
        return <DynamicResearchInstituteTargetChart />
      case 'multi-dimensional-analysis':
        return <DynamicMultiDimensionalAnalysisChart activeMode={multiDimensionMode} />
      case 'target-completion-status':
        return <DynamicTargetCompletionStatusChart />
      case 'ip-transformation-efficiency':
        return <DynamicIPTransformationEfficiencyChart />
      case 'revenue-distribution':
        return <DynamicRevenueDistributionChart />
      case 'horizontal-research-projects':
        return <DynamicHorizontalResearchProjectsChart />
      default:
        return null
    }
  }

  // 获取图表标题
  const getChartTitle = (chartId: string) => {
    const titles = {
      'research-output': '科研成果产出统计',
      'project-application': '科研项目申报与立项情况',
      'funding-distribution': '科研经费分配情况',
      'project-status': '科研项目状态分布',
      'task-completion': '任务完成情况',
      'project-overview': '项目进度全景分析',
      'project-type': '项目类型分布',
      'project-level': '项目级别统计',
      'research-institute-target-comparison': '各研究所目标达成对比图',
      'multi-dimensional-analysis': '多维度成果转化分析图',
      'target-completion-status': '成果转化目标完成状态分布图',
      'ip-transformation-efficiency': '测试3',
      'revenue-distribution': '各研究所收益分配结构图',
      'horizontal-research-projects': '各研究所横向科研项目统计'
    }
    return titles[chartId as keyof typeof titles] || '图表详情'
  }

  return (
    <div className="space-y-6">
      {renderContent()}
      
      {/* 图表放大对话框 */}
      <Dialog open={!!expandedChart} onOpenChange={handleCloseExpanded}>
        <DialogContent className="max-w-4xl max-h-[80vh] p-0">
          <DialogHeader className="p-6 pb-0">
            <DialogTitle className="text-xl font-semibold">
              {expandedChart && getChartTitle(expandedChart)}
            </DialogTitle>
          </DialogHeader>
          <div className="px-6 pb-6">
            <div className="h-[500px] w-full">
              {renderExpandedChart()}
            </div>
          </div>
        </DialogContent>
      </Dialog>
    </div>
  )
} 